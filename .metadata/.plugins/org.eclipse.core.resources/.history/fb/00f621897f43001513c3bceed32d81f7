/**
 * Arduino - Register Based Wire Device
 *
 * RegisterBasedWireDevice.cpp
 *
 * @author Dalmir da Silva <dalmirdasilva@gmail.com>
 */

#ifndef __ARDUINO_DRIVER_EEPROM_BASED_WIRED_DEVICE_H__
#define __ARDUINO_DRIVER_EEPROM_BASED_WIRED_DEVICE_H__ 1

#include <WiredDevice.h>

class EepromBasedWiredDevice: public WiredDevice {

public:

    /**
     * Public constructor
     * 
     * @param address       The wire address.
     */
    EepromBasedWiredDevice(unsigned char deviceAddress);

    /**
     * Configures a register.
     *
     * @param reg           The register number.
     * @param mask          The mask to be used.
     * @param d             The value to be used.
     */
    void configureRegisterBits(unsigned char reg, unsigned char mask,
            unsigned char d);

    /**
     * Writes a value to a register.
     *
     * @param reg           The register number.
     * @param d             The value to be used.
     */
    unsigned char writeRegister(unsigned char reg, unsigned char d);

    /**
     * Reades a value from a register.
     *
     * @param reg           The register number.
     * @return              The register value.
     */
    int readRegister(unsigned char reg);
};

#endif /* __ARDUINO_DRIVER_EEPROM_BASED_WIRED_DEVICE_H__ */
